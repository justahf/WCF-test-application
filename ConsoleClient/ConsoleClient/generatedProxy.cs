//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.19408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITestService")]
public interface ITestService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SayHello", ReplyAction="http://tempuri.org/ITestService/SayHelloResponse")]
    string SayHello(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SayHello", ReplyAction="http://tempuri.org/ITestService/SayHelloResponse")]
    System.Threading.Tasks.Task<string> SayHelloAsync(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/sum", ReplyAction="http://tempuri.org/ITestService/sumResponse")]
    int sum(int a, int b);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/sum", ReplyAction="http://tempuri.org/ITestService/sumResponse")]
    System.Threading.Tasks.Task<int> sumAsync(int a, int b);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SearchName", ReplyAction="http://tempuri.org/ITestService/SearchNameResponse")]
    string SearchName(int phone);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SearchName", ReplyAction="http://tempuri.org/ITestService/SearchNameResponse")]
    System.Threading.Tasks.Task<string> SearchNameAsync(int phone);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SearchPhone", ReplyAction="http://tempuri.org/ITestService/SearchPhoneResponse")]
    int[] SearchPhone(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SearchPhone", ReplyAction="http://tempuri.org/ITestService/SearchPhoneResponse")]
    System.Threading.Tasks.Task<int[]> SearchPhoneAsync(string name);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ITestServiceChannel : ITestService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TestServiceClient : System.ServiceModel.ClientBase<ITestService>, ITestService
{
    
    public TestServiceClient()
    {
    }
    
    public TestServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public TestServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string SayHello(string name)
    {
        return base.Channel.SayHello(name);
    }
    
    public System.Threading.Tasks.Task<string> SayHelloAsync(string name)
    {
        return base.Channel.SayHelloAsync(name);
    }
    
    public int sum(int a, int b)
    {
        return base.Channel.sum(a, b);
    }
    
    public System.Threading.Tasks.Task<int> sumAsync(int a, int b)
    {
        return base.Channel.sumAsync(a, b);
    }
    
    public string SearchName(int phone)
    {
        return base.Channel.SearchName(phone);
    }
    
    public System.Threading.Tasks.Task<string> SearchNameAsync(int phone)
    {
        return base.Channel.SearchNameAsync(phone);
    }
    
    public int[] SearchPhone(string name)
    {
        return base.Channel.SearchPhone(name);
    }
    
    public System.Threading.Tasks.Task<int[]> SearchPhoneAsync(string name)
    {
        return base.Channel.SearchPhoneAsync(name);
    }
}
